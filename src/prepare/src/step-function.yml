PrepareStepFunction:
  Type: AWS::Serverless::StateMachine
  Properties:
    Name: mytiki-lagoon-prepare
    Role: !GetAtt StepFunctionRole.Arn
    Definition:
      Comment: Prepare data files for ingestion into the Lagoon Iceberg data lake
      StartAt: Transform
      States:
        Transform:
          Type: Task
          Resource: arn:aws:states:::glue:startJobRun.sync
          Parameters:
            JobName: !Ref PrepareGlueJob
            Arguments:
              "--S3_BUCKET.$": "$.detail.bucket.name"
              "--S3_KEY.$": "$.detail.object.key"
          ResultPath: "$.GlueJobResult"
          Next: Delete
          TimeoutSeconds: 5400
          Catch:
            - ErrorEquals:
                - States.ALL
              Next: LogError
              Comment: Catch All
        Delete:
          Type: Task
          Parameters:
            "Bucket.$": "$.detail.bucket.name"
            "Key.$": "$.detail.object.key"
          Resource: arn:aws:states:::aws-sdk:s3:deleteObject
          End: true
          TimeoutSeconds: 180
          Catch:
            - ErrorEquals:
                - States.ALL
              Next: LogError
              Comment: Catch All
        LogError:
          Type: Task
          Resource: arn:aws:states:::sqs:sendMessage
          Parameters:
            "MessageBody.$": "$"
            MessageGroupId: mytiki-lagoon-prepare
            QueueUrl: !Sub
              - "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${QueueName}"
              - QueueName: !Select [ 5, !Split [ ":", !ImportValue mytiki-lagoon-log-queue ] ]
          End: true
